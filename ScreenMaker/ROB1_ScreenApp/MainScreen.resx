<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        fL38CxxjXFVzbVUDAAAAAElFTkSuQmCC
</value>
  </data>
</root>